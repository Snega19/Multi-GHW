name: Terraform Workflow

on:
  push:
    branches:
      - main

jobs:
  terraform_core:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7

      - name: Initialize Terraform for 'core'
        run: terraform init
        working-directory: core

      - name: Validate Terraform for 'core'
        run: terraform validate -no-color
        working-directory: core

      - name: Plan Terraform Changes for 'core'
        run: terraform plan -out=core/tfplan -no-color
        continue-on-error: true
        working-directory: core

      - name: Apply Terraform Changes for 'core'
        run: |
          export TF_LOG=DEBUG
          terraform apply -auto-approve core/tfplan
        continue-on-error: true
        working-directory: core

      - name: Cleanup Terraform Files for 'core'
        if: steps.apply.outcome == 'success'
        run: rm -f core/tfplan

  terraform_ran:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform for 'ran'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7

      - name: Initialize Terraform for 'ran'
        run: terraform init
        working-directory: ran

      - name: Validate Terraform for 'ran'
        run: terraform validate -no-color
        working-directory: ran

      - name: Plan Terraform Changes for 'ran'
        run: terraform plan -out=ran/tfplan -no-color
        continue-on-error: true
        working-directory: ran

      - name: Apply Terraform Changes for 'ran'
        run: |
          export TF_LOG=DEBUG
          terraform apply -auto-approve ran/tfplan
        continue-on-error: true
        working-directory: ran

      - name: Cleanup Terraform Files for 'ran'
        if: steps.apply.outcome == 'success'
        run: rm -f ran/tfplan

name: Terraform Workflow

on:
  push:
    branches:
      - main

jobs:
  terraform_core:
    if: github.event.head_commit.modified == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7

      - name: Check if Changes are in 'core'
        id: check_core_changes
        run: |
          if [[ -n "$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^core/')" ]]; then
            echo "Changes found in 'core/' directory."
            echo ::set-output name=run_core::true
          else
            echo "No changes found in 'core/' directory."
          fi
        shell: bash

      - name: Check if Changes are in 'ran'
        id: check_ran_changes
        run: |
          if [[ -n "$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^ran/')" ]]; then
            echo "Changes found in 'ran/' directory."
            echo ::set-output name=run_ran::true
          else
            echo "No changes found in 'ran/' directory."
          fi
        shell: bash

      - name: Initialize Terraform for 'core'
        if: steps.check_core_changes.outputs.run_core == 'true'
        run: terraform init -chdir=core

      - name: Validate Terraform for 'core'
        if: steps.check_core_changes.outputs.run_core == 'true'
        run: terraform validate -chdir=core

      - name: Plan Terraform Changes for 'core'
        if: steps.check_core_changes.outputs.run_core == 'true'
        run: terraform plan -out=tfplan -chdir=core -no-color

      - name: Apply Terraform Changes for 'core'
        if: steps.check_core_changes.outputs.run_core == 'true'
        run: |
          export TF_LOG=DEBUG
          terraform apply -auto-approve tfplan -chdir=core

      - name: Cleanup Terraform Files for 'core'
        if: steps.check_core_changes.outputs.run_core == 'true'
        run: rm -f core/tfplan

  terraform_ran:
    if: steps.check_ran_changes.outputs.run_ran == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7

      - name: Initialize Terraform for 'ran'
        run: terraform init -chdir=ran

      - name: Validate Terraform for 'ran'
        run: terraform validate -chdir=ran

      - name: Plan Terraform Changes for 'ran'
        run: terraform plan -out=tfplan -chdir=ran -no-color

      - name: Apply Terraform Changes for 'ran'
        run: |
          export TF_LOG=DEBUG
          terraform apply -auto-approve tfplan -chdir=ran

      - name: Cleanup Terraform Files for 'ran'
        run: rm -f ran/tfplan

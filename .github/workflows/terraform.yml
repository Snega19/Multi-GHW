name: Terraform Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'core/**'
      - 'ran/**'

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event Payload
        run: echo "$GITHUB_EVENT_PATH"

  terraform_core:
    if: github.event.head_commit.modified == true && contains(github.event.head_commit.modified, 'core/')

    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [core]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ matrix.directory }}

      - name: Validate Terraform
        run: terraform validate -no-color
        working-directory: ${{ matrix.directory }}

      - name: Plan Terraform Changes
        run: terraform plan -out=tfplan -no-color
        continue-on-error: true
        working-directory: ${{ matrix.directory }}

      - name: Apply Terraform Changes
        run: |
          export TF_LOG=DEBUG
          terraform apply -auto-approve tfplan
        continue-on-error: true
        working-directory: ${{ matrix.directory }}

      - name: Cleanup Terraform Files
        if: success()
        run: rm -f ${{ matrix.directory }}/tfplan

  terraform_ran:
    if: github.event.head_commit.modified == true && contains(github.event.head_commit.modified, 'ran/')

    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [ran]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ matrix.directory }}

      - name: Validate Terraform
        run: terraform validate -no-color
        working-directory: ${{ matrix.directory }}

      - name: Plan Terraform Changes
        run: terraform plan -out=tfplan -no-color
        continue-on-error: true
        working-directory: ${{ matrix.directory }}

      - name: Apply Terraform Changes
        run: |
          export TF_LOG=DEBUG
          terraform apply -auto-approve tfplan
        continue-on-error: true
        working-directory: ${{ matrix.directory }}

      - name: Cleanup Terraform Files
        if: success()
        run: rm -f ${{ matrix.directory }}/tfplan
